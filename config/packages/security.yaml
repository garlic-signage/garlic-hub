security:
    # Benutzer-Provider und Passwort-Hasher
    providers:
        user_provider:
            id: App\Modules\Auth\Repository\UserMain

    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # Firewalls
    firewalls:
        main:
            lazy: true
            provider: user_provider
            form_login: false
            custom_authenticator: App\Modules\Auth\Security\LoginFormAuthenticator
            entry_point: App\Modules\Auth\Security\LoginFormAuthenticator

            logout:
                path: /logout
                target: /login

    # Zugriffskontrolle
    access_control:
        - { path: ^/legals, roles: PUBLIC_ACCESS }
        - { path: ^/login, roles: PUBLIC_ACCESS }
        - { path: ^/set-locale, roles: PUBLIC_ACCESS }
        - { path: ^/reset-password, roles: PUBLIC_ACCESS }
        - { path: ^/registration, roles: PUBLIC_ACCESS }
        - { path: ^/, roles: ROLE_USER }


when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon